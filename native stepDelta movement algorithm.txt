Determine the difference btw the destination and the current stepDeltas --> this is the "step-displacement"

Determine what the step direction will be for each motor (1, 0, or -1) by finding the sign (via ===0 <1 >1) of the step-displacement

Determine the number of steps each motor will take by finding the absolute value of the step-displacement. The NUMBER of steps is always a positive integer.

Determine how many dual-motor steps there will be ("diagonal" steps):
dual steps = (the number steps L or R, whichever is lesser)

Determine how many single-motor steps there will be
single steps = (the big number of steps) - (the small number of steps)

MOVEMENTS - there's the dual-step movement, and the single-step movement.
When moving the cursor, the dual-step always goes first.

The primary movement is whichever has more steps: "dual steps" or "single steps".
The secondary movement is whichever has less.

Now we split the movements into chunks, eg 10 into 3 chunks --> [4,3,3].

  The secondary movement gets divided into as many chunks as it has steps, so it's always has one step each chunk: like [1,1,...,1]

  The primary movement gets divided into ((no of steps in secondary mvmt) + 1) chunks.

Finally, execute the movements by moving across the two chunk arrays: secondary[0], primary[0], secondary[1], primary[1], ...
